// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("Todo");

function make(todo, onDelete, onCompletedToggle, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var match = todo[/* completed */2];
              return React.createElement("div", {
                          key: String(todo[/* id */0])
                        }, React.createElement("span", undefined, todo[/* title */1]), React.createElement("button", {
                              onClick: (function (param) {
                                  return Curry._1(onDelete, /* () */0);
                                })
                            }, "Delete"), React.createElement("input", {
                              checked: todo[/* completed */2],
                              type: "checkbox",
                              onChange: (function (param) {
                                  return Curry._1(onCompletedToggle, /* () */0);
                                })
                            }), match ? "Completed" : null);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
