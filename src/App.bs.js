// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Random = require("bs-platform/lib/js/random.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TodoItem$ReactTemplate = require("./TodoItem.bs.js");

var component = ReasonReact.reducerComponent("TodoList");

function make(_children) {
  var handleKeyPress = function (e, param) {
    if (e.charCode === 13) {
      return Curry._1(param[/* send */3], /* AddTodo */0);
    } else {
      return 0;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", undefined, React.createElement("input", {
                              placeholder: "Todo value",
                              value: self[/* state */1][/* value */1],
                              onKeyPress: Curry._1(self[/* handle */0], handleKeyPress),
                              onChange: (function (e) {
                                  return Curry._1(self[/* send */3], /* ChangeValue */Block.__(1, [e.target.value]));
                                })
                            }), React.createElement("button", {
                              onClick: (function (param) {
                                  return Curry._1(self[/* send */3], /* AddTodo */0);
                                })
                            }, "Add todo"), $$Array.of_list(List.map((function (todo) {
                                    return ReasonReact.element(String(todo[/* id */0]), undefined, TodoItem$ReactTemplate.make(todo, (function (param) {
                                                      return Curry._1(self[/* send */3], /* DeleteTodo */Block.__(0, [todo[/* id */0]]));
                                                    }), (function (param) {
                                                      return Curry._1(self[/* send */3], /* ToggleCompleted */Block.__(2, [todo[/* id */0]]));
                                                    }), /* array */[]));
                                  }), self[/* state */1][/* todos */0])));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* todos : [] */0,
                      /* value */""
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (state[/* value */1] !== "") {
                  return /* Update */Block.__(0, [/* record */[
                              /* todos : :: */[
                                /* record */[
                                  /* id */Random.$$int(64000),
                                  /* title */state[/* value */1],
                                  /* completed */false
                                ],
                                state[/* todos */0]
                              ],
                              /* value */""
                            ]]);
                } else {
                  return /* NoUpdate */0;
                }
              } else {
                switch (action.tag | 0) {
                  case 0 : 
                      var id = action[0];
                      return /* Update */Block.__(0, [/* record */[
                                  /* todos */List.filter((function (todo) {
                                            return todo[/* id */0] !== id;
                                          }))(state[/* todos */0]),
                                  /* value */state[/* value */1]
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* todos */state[/* todos */0],
                                  /* value */action[0]
                                ]]);
                  case 2 : 
                      var id$1 = action[0];
                      return /* Update */Block.__(0, [/* record */[
                                  /* todos */List.map((function (todo) {
                                          var match = todo[/* id */0] === id$1;
                                          if (match) {
                                            return /* record */[
                                                    /* id */todo[/* id */0],
                                                    /* title */todo[/* title */1],
                                                    /* completed */!todo[/* completed */2]
                                                  ];
                                          } else {
                                            return todo;
                                          }
                                        }), state[/* todos */0]),
                                  /* value */state[/* value */1]
                                ]]);
                  
                }
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
